<!DOCTYPE html>
<html lang="en"> 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            padding: 20px;
        }
        .container {
            max-width: 600px;
            margin: auto;
        }
        .form-control {
            background-color: white !important;
            color: black !important;
        }
        .cost-item {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <form id="pricing-form">
            <div class="form-group">
                <label for="service_of_process">Standard Service of Process:</label>
                <select class="form-control" id="service_of_process" name="service_of_process" onchange="updateCost()">
                    <option value="no">No</option>
                    <option value="yes">Yes (+$75)</option>
                </select>
            </div>
            <div class="form-group">
                <label for="skip_trace">Electronic Skip Trace Required?</label>
                <select class="form-control" id="skip_trace" name="skip_trace" onchange="updateCost()">
                    <option value="no">No</option>
                    <option value="yes">Yes (+$75)</option>
                </select>
            </div>
            <div class="form-group">
                <label for="document_retrieval">Standard Document Retrieval Service:</label>
                <select class="form-control" id="document_retrieval" name="document_retrieval" onchange="updateCost()">
                    <option value="no">No</option>
                    <option value="yes">Yes (+$75)</option>
                </select>
            </div>
            <div class="form-group">
                <label for="rush">Rush Service (within 24 hours):</label>
                <select class="form-control" id="rush" name="rush" onchange="updateCost()">
                    <option value="no">No</option>
                    <option value="yes">Yes (+$50)</option>
                </select>
            </div>
            <div class="form-group">
                <label for="address">Subject Address: Address Subject is to be Served at or documents to be retrieved from (leave blank if unknown):</label>
                <input type="text" class="form-control" id="address" name="address">
            </div>
            <div class="form-group">
                <label for="miles">Miles to Subject Address from 223 E 4th St, Port Angeles, WA 98362:</label>
                <input type="number" class="form-control" id="miles" name="miles" readonly>
            </div>
            <div id="mileage-explanation" class="mt-2">
                <small>Mileage Fee Calculation: $0.95 per mile for distances beyond the initial 20 miles.</small>
            </div>

            <button type="button" class="btn btn-primary" onclick="calculateCost()">Calculate Estimated Cost</button>
        </form>
        <div id="cost-breakdown" class="mt-4"></div>
        <div id="result" class="mt-4"></div>
    </div>

    <script>
        function updateCost(miles = 0) {
            const baseFee = document.getElementById('service_of_process').value === 'yes' ? 75 : 0;
            const rushFee = document.getElementById('rush').value === 'yes' ? 50 : 0;
            const skipTraceFee = document.getElementById('skip_trace').value === 'yes' ? 75 : 0;
            const documentRetrievalFee = document.getElementById('document_retrieval').value === 'yes' ? 75 : 0;
            const mileageFee = miles > 20 ? (miles - 20) * 0.95 : 0;

            const costBreakdown = `
                <div class="cost-item">Standard Service of Process: $${baseFee}</div>
                <div class="cost-item">Rush Service: $${rushFee}</div>
                <div class="cost-item">Electronic Skip Trace: $${skipTraceFee}</div>
                <div class="cost-item">Document Retrieval: $${documentRetrievalFee}</div>
                <div class="cost-item">Mileage Fee: $${mileageFee.toFixed(2)}</div>
            `;

            document.getElementById('cost-breakdown').innerHTML = costBreakdown;
        }

        function calculateCost() {
            const baseFee = document.getElementById('service_of_process').value === 'yes' ? 75 : 0;
            const rushFee = document.getElementById('rush').value === 'yes' ? 50 : 0;
            const skipTraceFee = document.getElementById('skip_trace').value === 'yes' ? 75 : 0;
            const documentRetrievalFee = document.getElementById('document_retrieval').value === 'yes' ? 75 : 0;
            const miles = parseFloat(document.getElementById('miles').value) || 0;
            const mileageFee = miles > 20 ? (miles - 20) * 0.95 : 0;
            const totalCost = baseFee + rushFee + skipTraceFee + documentRetrievalFee + mileageFee;

            const costBreakdown = `
                <div class="cost-item">Standard Service of Process: $${baseFee}</div>
                <div class="cost-item">Rush Service: $${rushFee}</div>
                <div class="cost-item">Electronic Skip Trace: $${skipTraceFee}</div>
                <div class="cost-item">Document Retrieval: $${documentRetrievalFee}</div>
                <div class="cost-item">Mileage Fee: $${mileageFee.toFixed(2)}</div>
            `;

            document.getElementById('cost-breakdown').innerHTML = costBreakdown;
            document.getElementById('result').innerHTML = `<h3>Total Estimated Cost: $${totalCost.toFixed(2)}</h3>`;
        }

        function calculateMileage() {
            const address = document.getElementById('address').value;
            if (address) {
                const geocoder = new google.maps.Geocoder();
                geocoder.geocode({ 'address': address }, function(results, status) {
                    if (status === 'OK') {
                        const subjectLocation = results[0].geometry.location;
                        const courthouseLocation = new google.maps.LatLng(48.118146, -123.430741);
                        const service = new google.maps.DistanceMatrixService();
                        service.getDistanceMatrix(
                            {
                                origins: [courthouseLocation],
                                destinations: [subjectLocation],
                                travelMode: 'DRIVING',
                            },
                            function(response, status) {
                                if (status === 'OK') {
                                    const distance = response.rows[0].elements[0].distance.value / 1609.34;
                                    document.getElementById('miles').value = distance.toFixed(2);
                                    updateCost(distance); // Update cost breakdown
                                } else {
                                    console.error('Distance Matrix request failed due to ' + status);
                                    // Handle error, e.g., show a message to the user
                                }
                            }
                        );
                    } else {
                        console.error('Geocode was not successful for the following reason: ' + status);
                        // Handle error, e.g., show a message to the user
                    }
                });
            } else {
                document.getElementById('miles').value = ''; // Clear miles if address is empty
                updateCost(); 
            }
        }

        document.getElementById('address').addEventListener('blur', calculateMileage);
        document.getElementById('address').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                calculateMileage();
            }
        });
    </script>
    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=&libraries=places,geometry">
    </script>
</body>

</html>
